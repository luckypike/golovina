.page_cart_container
  .page.page_cart.page_common
    .page_cart_intro.lv2
      h1
        = title 'Корзина'

    .page_cart_title.lv3
      .h3
        | Заказ № #{@order.number}

    .page_cart_items
      .items
        - @items.each do |item|
          .items_item.lv3
            = link_to [item.variant.product, anchor: item.variant.id], class: :image
              - if item.variant.images.size > 0
                .img
                  = image_tag root_url + item.variant.images.sort_by{ |i| [(i.weight.to_i.zero? ? 99 : i.weight), i.created_at] }.first.photo.preview.url

            .data
              .title
                = link_to item.variant.product.title_safe, [item.variant.product, anchor: item.variant.id]

              .color
                ' Цвет:
                = item.variant.color.title

              .size
                ' Размер:
                - if item.variant.product.category.get_ancestor == Rails.application.secrets[:men]
                  = t("sizes_men.size_#{item.size}")
                - else
                  = t("sizes.size_#{item.size}")

              .quantity
                ' Количество:
                = item.quantity

              .actions
                / = link_to 'Добавить ещё', '#', class: [:btn, :btn_gr]
                = link_to 'Удалить из корзины', [:cart, :destroy, id: item.id], remote: true, class: :cart_destroy, method: :delete


      .summary
        .title.lv3
          | Сумма к оплате

        .summary_list
          .summary_list_item.lv3
            | Товаров на сумму: #{number_to_rub(@items.map{ |i| i.variant.product.price_sell * i.quantity }.sum)}

          / .summary_test.lv3
            | Интернет-магазин работает в тестовом режиме. К сожалению, временно невозможно оплатить заказ. Мы предлагаем вам зарезервировать нужные вам товары, а наш менеджер свяжется с вами для подтверждения заказа и поможет оформить доставку и оплату.

          .summary_form
              .form
                = simple_form_for @order, url: [:checkout, @order], method: :post, remote: true do |f|
                  .form_inputs
                    = simple_fields_for :user do |ff|
                      - if @order.user.is_guest?
                        = ff.input :name
                        = ff.input :s_name
                        = ff.input :phone, input_html: { class: :as_cleave_phone, value: '' }
                        = ff.input :email, required: false, input_html: { value: nil }

                    / = f.input :delivery
                    = f.input :address

                  .form_errors

                  .form_actions
                    = f.button :submit, data: { disable_with: 'Подождите..' }
