.page.page_common.page_products_all
  .page_products_all_list
    .products
      .products_new.lv2
        = link_to 'Новый товар', [:new, :product], class: :btn

      - @categories.reject{ |c| c.parent_category }.each do |category|
        .products_category
          h2
            = category.title

        - category.products.each do |product|
          .products_item
            .data
              .title
                strong
                  = product.title

              .price
                = number_to_rub product.price

              .colors
                = product.variants.map{ |v| v.color.title + ': ' + (v.sizes.present? ? v.sizes.reject(&:blank?).to_sentence : 'размеры не указаны') }.join(' / ')

            .themes
              - product.themes.each do |theme|
                .themes_item
                  = theme.title

            .images
              - product.variants.each do |variant|
                - variant.images[0..1].each do |image|
                  = image_tag image.photo.preview.url if image.photo?

            - if policy(product).edit?
              .edit
                = link_to 'Редактировать', [:edit, product], class: [:btn, :btn_gr]
                =< link_to 'Размеры и цвета', [:variants, product], class: [:btn, :btn_gr]
                =< link_to 'Удалить', product, class: [:btn, :btn_gr], method: :delete, data: { confirm: 'Точно удалить?' }


        - category.categories.each do |category_category|
          .products_category
            h3
              = category_category.title

          - category_category.products.each do |product|
            .products_item
              .data
                .title
                  strong
                    = product.title

                .price
                  = number_to_rub product.price

                .colors
                  = product.variants.map{ |v| v.color.title + ': ' + (v.sizes.present? ? v.sizes.reject(&:blank?).to_sentence : 'размеры не указаны') }.join(' / ')

              .themes
                - product.themes.each do |theme|
                  .themes_item
                    = theme.title

              .images
                - product.variants.each do |variant|
                  - variant.images[0..1].each do |image|
                    = image_tag image.photo.preview.url if image.photo?

              - if policy(product).edit?
                .edit
                  = link_to 'Редактировать', [:edit, product], class: [:btn, :btn_gr]
                  =< link_to 'Размеры и цвета', [:variants, product], class: [:btn, :btn_gr]
                  =< link_to 'Удалить', product, class: [:btn, :btn_gr], method: :delete, data: { confirm: 'Точно удалить?' }


          / strong
            = link_to product do
              | ##{product.id}
              =<> product.title_safe

          / span.actions
            | (
            => link_to 'редактировать', [:edit, product]
            | /
            =< link_to 'цвета и размеры', [:variants, product]
            | )
