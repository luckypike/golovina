services:
  api: &api
    build: ./api
    working_dir: /app/api
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    environment:
      RAILS_ENV: development
      DATABASE_HOST: pg
      REDIS_HOST: redis
      HISTFILE: /app/.local/.bash_history
    volumes:
      - nfsmount:/app
    ports:
      - 3000:3000
    env_file:
      - .env
    depends_on:
      - pg
      - redis
    stdin_open: true
    tty: true

  api-go: &api-go
    build: ./api-go
    environment:
      DATABASE_HOST: pg
      HISTFILE: /app/tmp/.bash_history
    env_file:
      - .env
    volumes:
      - ./api-go:/app
      - go-build:/root/.cache/go-build
      - go-modules:/go/pkg/mod
    ports:
      - 3001:3000

  air-go: &air-go
    image: cosmtrek/air
    command: "air init"
    working_dir: /app
    environment:
      DATABASE_HOST: pg
    env_file:
      - .env
    volumes:
      - ./api-go:/app
      - go-build:/root/.cache/go-build
      - go-modules:/go/pkg/mod
    ports:
      - 3001:3000

  pg:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: golovina-dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432

  redis:
    image: redis:alpine
    volumes:
      - redis:/data

volumes:
  go-build:
  go-modules:
  postgres:
    name: golovina-api-pg
  redis:
    name: golovina-api-redis
  nfsmount:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: :${PWD}

networks:
  default:
    name: golovina-dev
