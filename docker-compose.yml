services:
  api: &api
    build: ./api
    working_dir: /app/api
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    environment:
      # RAILS_ENV: development
      DATABASE_HOST: pg
      REDIS_HOST: redis
      HISTFILE: /app/.local/.bash_history
      ELASTICSEARCH_URL: es
      S3_URL: http://localhost:3002/s3
      DEV_HOST: glvn.lhr.rocks
    tmpfs:
      - /tmp
    volumes:
      - ./:/app:cached
    ports:
      - 3000:3000
    env_file:
      - .env
    depends_on:
      - pg
      - nginx
      - redis
      - es
    stdin_open: true
    tty: true

  fastapi: &fastapi
    build: ./fastapi
    profiles:
      - donotstart
    environment:
      DATABASE_HOST: pg
      HISTFILE: /app/tmp/.bash_history
    env_file:
      - .env
    volumes:
      - ./fastapi:/app
      - go-build:/root/.cache/go-build
      - go-modules:/go/pkg/mod
    ports:
      - 3001:3000

  air: &air
    image: cosmtrek/air
    command: "air init"
    working_dir: /app
    environment:
      DATABASE_HOST: pg
      DATABASE_NAME: golovina-dev
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
    depends_on:
      - pg
    env_file:
      - .env
    volumes:
      - ./fastapi:/app:cached
      - go-build:/root/.cache/go-build
      - go-modules:/go/pkg/mod
    ports:
      - 3001:3000

  pg:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: golovina-dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432

  redis:
    image: redis:alpine
    volumes:
      - redis:/data

  es:
    image: elasticsearch:7.16.2
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms350m -Xmx350m"
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  nginx:
    image: nginx:alpine
    volumes:
      # - ./api/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./api/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 3002:80

volumes:
  go-build:
  go-modules:
  elasticsearch:
    name: golovina-api-es
  postgres:
    name: golovina-api-pg
  redis:
    name: golovina-api-redis

networks:
  default:
    name: golovina-dev
